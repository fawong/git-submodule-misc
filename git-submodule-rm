#!/bin/sh
#
# git-submodule-rm - stages the removal of given submodules
#
# Copyright (c) 2012 Akinori MUSHA
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

usage () {
    cat <<EOF >&2
usage: $0 <submodule>..

`basename $0` stages the removal of given submodules.
EOF
}

main () {
    local opt OPTIND=1

    while getopts '' opt; do
        :
    done

    shift $(($OPTIND - 1))

    if [ $# -eq 0 ]; then
        usage
        exit 1
    fi

    if [ ! -d .git ]; then
        echo 'You need to run this command from the toplevel of the working tree.' >&2
        exit 1
    fi

    if [ ! -f .gitmodules ]; then
        echo 'No submodule defined.' >&2
        exit 1
    fi

    local name path cwd abspath error

    for name; do
        path="$(git config --file .gitmodules --get "submodule.$name.path")"
        if [ -n "$path" ]; then
            cwd="$(pwd -L)"
            abspath="$(cd -L "$path" && pwd -L)"
            case "$abspath" in
                "$cwd"/*)
                    git rm --cached "$path"
                    rm -rf "$path"
                    git config --file .gitmodules --remove-section "submodule.$name"
                    git add .gitmodules
                    ;;
                *)
                    echo "Not removing \`$name' - \`$path' is outside of the working tree." >&2
                    error=t
                    ;;
            esac
        else
            echo "No submodule \`$name' found" >&2
            error=t
        fi
    done

    [ -z "$error" ] || exit 1
}

main "$@"
